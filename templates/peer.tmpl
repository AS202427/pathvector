# {{ .Name }} {{ .Peer.Asn }} last operation at {{ .Peer.QueryTime }}

define AS{{ .Peer.Asn }}_MAXPFX_v4 = {{ .Peer.MaxPfx4 }};
define AS{{ .Peer.Asn }}_MAXPFX_v6 = {{ .Peer.MaxPfx6 }};

{{ if eq .Peer.ImportPolicy "cone" -}}
define AS{{ .Peer.Asn }}_PFX_v4 = [
{{.PfxFilterString4}}
];

define AS{{ .Peer.Asn }}_PFX_v6 = [
{{.PfxFilterString6}}
];

{{ end -}}

{{ $peer := .Peer }}
{{ $name := .Name }}
{{- $global := .Global }}
{{- $af := "4" }}
{{- range $i, $neighbor := .Peer.NeighborIps }}
{{- if Contains $neighbor ":" }}
{{ $af = "6" }}
{{- end -}}
protocol bgp AS{{ $peer.Asn }}v{{ $af }}_{{ $i }} {
    local as {{ $global.Asn }};
    neighbor {{ $neighbor }} as {{ $peer.Asn }};
    description "AS{{ $peer.Asn }} {{ $name }}";
    {{ if $peer.Disabled }}disabled;{{ end }}
    {{- if $peer.Passive }}passive;{{ end }}
    {{- if $peer.Multihop }}multihop 255;{{ end -}}

    ipv{{ $af }} {
        import keep filtered;
        import limit AS{{ $peer.Asn }}_MAXPFX_v{{ $af }} action {{ $peer.PfxLimitAction }};
        import filter {
            reject_bogons();
            strip_communities();
            bgp_local_pref = {{ $peer.LocalPref }};
            honor_graceful_shutdown();
            {{ $peer.PreImport }}
            {{- if not (eq $peer.Prepends 0) }}
            {{- range $i := Iterate $peer.Prepends }}
            bgp_path.prepend(ASN);
            {{- end -}}
            {{- end -}}
            {{- if eq $peer.ImportPolicy "cone" }}
            if (net ~ AS{{ $peer.Asn }}_PFX_v{{ $af }}) then {
                bgp_large_community.add((ASN,0,102));
                accept;
            }
            reject;
            {{- else if eq $peer.ImportPolicy "any" }}
            bgp_large_community.add((ASN,0,101));
            accept;
            {{- else if eq $peer.ImportPolicy "none" }}
            reject;
            {{- end }}
        };
        export filter {
            {{- $peer.PreExport }}
            {{- if eq $peer.ExportPolicy "any" -}}
            {{ if $global.Prefixes }}
            accept_local(); # Originated
            {{- end }}
            if ((ASN,0,101) ~ bgp_large_community) then accept; # Upstream
            if ((ASN,0,102) ~ bgp_large_community) then accept; # Peer
            if ((ASN,0,103) ~ bgp_large_community) then accept; # Downstream
            {{- else if eq $peer.ExportPolicy "cone" -}}
            {{ if $global.Prefixes }}
            accept_local(); # Originated
            {{- end }}
            if ((ASN,0,103) ~ bgp_large_community) then accept; # Downstream
            {{- end }}
            reject;
        };
    };
}
{{end}}
