# {{ .Name }} {{ .Peer.Asn }} last operation at {{ .Peer.QueryTime }}

define AS{{ .Peer.Asn }}_MAXPFX_v4 = {{ .Peer.MaxPfx4 }};
define AS{{ .Peer.Asn }}_MAXPFX_v6 = {{ .Peer.MaxPfx6 }};

{{ if eq .Peer.ImportPolicy "cone" -}}
define AS{{ .Peer.Asn }}_PFX_v4 = [
{{.PfxFilterString4}}
];

define AS{{ .Peer.Asn }}_PFX_v6 = [
{{.PfxFilterString6}}
];

{{ end -}}

{{ $peer := .Peer }}
{{- $global := .Global }}
{{- $af := "4" }}
{{- range $i, $neighbor := .Peer.NeighborIps }}
{{- if Contains $neighbor ":" }}
{{ $af = "6" }}
{{- end -}}
protocol bgp AS{{ $peer.Asn }}v{{ $af }}_{{ $i }} {
    local as {{ $global.Asn }};
    neighbor {{ $neighbor }} as {{ $peer.Asn }};
    {{ if $peer.Disabled }}disabled;{{ end }}
    {{- if $peer.Passive }}passive;{{ end }}
    {{- if $peer.Multihop }}multihop 255;{{ end -}}

    ipv{{ $af }} {
        import keep filtered;
        import limit AS{{ $peer.Asn }}_MAXPFX_v{{ $af }} action {{ $peer.PfxLimitAction }};
        import filter {
            reject_bogons();
            bgp.local_pref = {{ $peer.LocalPref }};
            {{- if eq $peer.ImportPolicy "cone" }}
            if (net ~ AS{{ $peer.Asn }}_PFX_v{{ $af }}) then accept;
            reject;
            {{- else if eq $peer.ImportPolicy "any" }}
            accept;
            {{- else if eq $peer.ImportPolicy "none" }}
            reject;
            {{- end }}
        };
    };
}
{{end}}
